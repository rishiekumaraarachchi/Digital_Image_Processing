#include "opencv2/opencv.hpp"

#include "opencv2/highgui.hpp"

#include "opencv2/core.hpp"

#include "math.h"

#define PI 3.14159265



using namespace cv;

using namespace std;



int main(int argc, char* argv[]) {

	Mat image = imread(argv[1], IMREAD_GRAYSCALE);



	if (!image.data) {

		cout << "Could not find the image! " << endl;

		return -1;

	}



	Mat smooth = image.clone();



	//int k[3][3] = { {2, 4, 5},

	//				{4, 9, 12},

	//				{5, 12, 15}};


	int k[5][5] = { {2, 4, 5, 4, 2},

				{4, 9, 12, 9, 4},

				{5, 12, 15, 12, 5},

				{ 4, 9, 12, 9, 4 },

				{ 2, 4, 5, 4, 2 } };



	double val;

	for (int i = 2; i < image.rows - 2; i++) {

		for (int j = 2; j < image.cols - 2; j++) {

			val = 0.0;

			for (int m = -2; m <= 2; m++) {

				for (int n = -2; n <= 2; n++) {

					val = val + double(k[m + 2][n + 2] * image.at<uchar>(i + m, j + n)) / 159;

				}

			}

			smooth.at<uchar>(i, j) = cvRound(val);

		}

	}

	namedWindow("Image");

	imshow("Image", image);

	namedWindow("Smooth Image");

	imshow("Smooth Image", smooth);

	waitKey(0);

	return 0;



}